{"version":3,"file":"static/js/774.7651ff1e.chunk.js","mappings":"2TAEAA,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAGT,SAAeC,IAAtB,+B,aAAO,O,oBAAA,oGACkBF,IAAAA,IAAA,qCAAwCC,IAD1D,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAMA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAiCC,GAAjC,uFACkBP,IAAAA,IAAA,+BACGC,EADH,kBACoBM,EADpB,+CADlB,cACCJ,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAQA,SAAeG,EAAtB,kC,aAAO,O,oBAAA,WAAiCC,GAAjC,uFACkBT,IAAAA,IAAA,gBACZS,EADY,oBACOR,EADP,oBADlB,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAQA,SAAeM,EAAtB,kC,aAAO,O,oBAAA,WAAiCD,GAAjC,uFACkBT,IAAAA,IAAA,iBACXS,EADW,4BACgBR,EADhB,oBADlB,cACCE,EADD,yBAIEA,EAASC,KAAKO,MAJhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,uFACkBT,IAAAA,IAAA,gBACZS,EADY,4BACeR,EADf,oBADlB,cACCE,EADD,yBAIEA,EAASC,KAAKC,SAJhB,oE,6GCnCP,EAA0B,sBAA1B,EAA2D,uBAA3D,EAAgG,0B,mBCKjF,SAASQ,IACtB,IAAQJ,GAAYK,EAAAA,EAAAA,MAAZL,QACR,GAAgCM,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRR,EAAAA,EAAAA,IAAkBD,GAASU,KAAKF,KAC/B,CAACR,KAGF,8BACGO,EAASI,QACR,eAAIC,UAAWC,EAAf,SACGN,EAASO,KAAI,SAAAC,GAAO,OACnB,gBAAqBH,UAAWC,EAAhC,WACE,wBAAKE,EAAQC,QACb,gBACEJ,UAAWC,EACXI,IACEF,EAAQG,aAAR,0CACuCH,EAAQG,cAD/C,UAEOC,GAETC,IAAKL,EAAQC,QAEf,uBAAID,EAAQM,cAXLN,EAAQO,UAgBrB,6D","sources":["services/moviesAPI.js","webpack://goit-react-hw-05-movies/./src/views/Cast/Cast.module.css?f355","views/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3816eed11788ae9ab9f7c04c9c090fd5';\n\n// ----trending movies\nexport async function fetchTrending() {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\n// ---- search movies\nexport async function fetchMoviesSearch(searchQuery) {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1&language=en-US&include_adult=false`\n  );\n  return response.data.results;\n}\n\n// ---- movie's details\nexport async function fetchMovieDetails(movieID) {\n  const response = await axios.get(\n    `movie/${movieID}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\n// // ---- movie's credits\nexport async function fetchMovieCredits(movieID) {\n  const response = await axios.get(\n    `/movie/${movieID}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n}\n\n// // ---- movie's reviews\nexport async function fetchMovieReviews(movieID) {\n  const response = await axios.get(\n    `movie/${movieID}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"picture\":\"Cast_picture__2N5Mq\",\"castList\":\"Cast_castList__6cgNV\",\"castElement\":\"Cast_castElement__NiROr\"};","import { useState, useEffect } from 'react';\nimport { fetchMovieCredits } from 'services/moviesAPI';\nimport { useParams } from 'react-router-dom';\nimport s from './Cast.module.css';\nimport zeroPicture from '../../images/no-poster-big-2x.jpg';\n\nexport default function Cast() {\n  const { movieID } = useParams();\n  const [castList, setCastList] = useState([]);\n\n  useEffect(() => {\n    fetchMovieCredits(movieID).then(setCastList);\n  }, [movieID]);\n\n  return (\n    <>\n      {castList.length ? (\n        <ul className={s.castList}>\n          {castList.map(element => (\n            <li key={element.id} className={s.castElement}>\n              <h4>{element.name}</h4>\n              <img\n                className={s.picture}\n                src={\n                  element.profile_path\n                    ? `https://image.tmdb.org/t/p/w200/${element.profile_path}`\n                    : `${zeroPicture}`\n                }\n                alt={element.name}\n              />\n              <p>{element.character}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No cast information avaliable</p>\n      )}\n    </>\n  );\n}\n"],"names":["axios","API_KEY","fetchTrending","response","data","results","fetchMoviesSearch","searchQuery","fetchMovieDetails","movieID","fetchMovieCredits","cast","fetchMovieReviews","Cast","useParams","useState","castList","setCastList","useEffect","then","length","className","s","map","element","name","src","profile_path","zeroPicture","alt","character","id"],"sourceRoot":""}
{"version":3,"file":"static/js/550.ee10d4be.chunk.js","mappings":"2TAEAA,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAGT,SAAeC,IAAtB,+B,aAAO,O,oBAAA,oGACkBF,IAAAA,IAAA,qCAAwCC,IAD1D,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAMA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAiCC,GAAjC,uFACkBP,IAAAA,IAAA,+BACGC,EADH,kBACoBM,EADpB,+CADlB,cACCJ,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAQA,SAAeG,EAAtB,kC,aAAO,O,oBAAA,WAAiCC,GAAjC,uFACkBT,IAAAA,IAAA,gBACZS,EADY,oBACOR,EADP,oBADlB,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAQA,SAAeM,EAAtB,kC,aAAO,O,oBAAA,WAAiCD,GAAjC,uFACkBT,IAAAA,IAAA,iBACXS,EADW,4BACgBR,EADhB,oBADlB,cACCE,EADD,yBAIEA,EAASC,KAAKO,MAJhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,uFACkBT,IAAAA,IAAA,gBACZS,EADY,4BACeR,EADf,oBADlB,cACCE,EADD,yBAIEA,EAASC,KAAKC,SAJhB,oE,0FCnCP,EAA6B,8BAA7B,EAAmE,yBAAnE,EAAqG,0B,mBCI9F,SAASQ,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAC1B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAgBA,OACE,2BACE,kBAAMC,UAAWC,EAAcL,SAhBd,SAAAM,GAGnB,GAFAA,EAAEC,iBAEmB,KAAjBL,EAAMM,OACR,OAAOC,EAAAA,GAAAA,MAAY,2BAErBT,EAASE,GACTC,EAAS,KASP,WACE,kBACEC,UAAWC,EACXK,KAAK,OACLC,MAAOT,EACPU,SAXa,SAAAN,GACnBH,EAASG,EAAEO,cAAcF,QAWnBG,aAAa,MACbC,WAAS,EACTC,YAAY,sBAEd,mBAAQZ,UAAWC,EAAUK,KAAK,SAAlC,yB,cCjCR,GAAgB,OAAS,4BAA4B,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,4BAA4B,MAAQ,4B,UCK7J,SAASO,EAAT,GAA6C,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,UACpC,OACE,8BACqB,IAAlBD,EAAOE,QACN,gBAAIhB,UAAWC,EAAAA,OAAf,oCAAiDc,MAEjD,iCACE,gBAAIf,UAAWC,EAAAA,OAAf,iCAA8Cc,MAC9C,eAAIf,UAAWC,EAAAA,KAAf,SACGa,EAAOG,KAAI,SAAAC,GAAK,OACf,eAAmBlB,UAAWC,EAAAA,QAA9B,UACE,UAAC,KAAD,CAAMkB,GAAE,UAAKD,EAAME,IAAMpB,UAAWC,EAAAA,KAApC,WACE,gBACED,UAAWC,EAAAA,OACXoB,IACEH,EAAMI,YAAN,0CACuCJ,EAAMI,aAD7C,UAEOC,GAETC,IAAKN,EAAMO,SAEb,cAAGzB,UAAWC,EAAAA,MAAd,SAAwBiB,EAAMO,YAXzBP,EAAME,c,aCXd,SAASM,IACtB,OAAkC7B,EAAAA,EAAAA,UAAS,IAA3C,eAAOkB,EAAP,KAAkBY,EAAlB,KACA,GAA4B9B,EAAAA,EAAAA,UAAS,MAArC,eAAOiB,EAAP,KAAec,EAAf,KAaA,OAPAC,EAAAA,EAAAA,YAAU,WACHd,IAGL3B,EAAAA,EAAAA,IAAkB2B,GAAWe,KAAKF,KACjC,CAACb,KAGF,iCACE,SAACpB,EAAD,CAAWC,SAbU,SAAAE,GACvB6B,EAAa7B,MAaVgB,IAAU,SAACD,EAAD,CAAaC,OAAQA,EAAQC,UAAWA,S","sources":["services/moviesAPI.js","webpack://goit-react-hw-05-movies/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.js","webpack://goit-react-hw-05-movies/./src/components/MoviesFound/MoviesFound.module.css?e6f4","components/MoviesFound/MoviesFound.js","views/MoviesPage/MoviesPage.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3816eed11788ae9ab9f7c04c9c090fd5';\n\n// ----trending movies\nexport async function fetchTrending() {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\n// ---- search movies\nexport async function fetchMoviesSearch(searchQuery) {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1&language=en-US&include_adult=false`\n  );\n  return response.data.results;\n}\n\n// ---- movie's details\nexport async function fetchMovieDetails(movieID) {\n  const response = await axios.get(\n    `movie/${movieID}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\n// // ---- movie's credits\nexport async function fetchMovieCredits(movieID) {\n  const response = await axios.get(\n    `/movie/${movieID}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n}\n\n// // ---- movie's reviews\nexport async function fetchMovieReviews(movieID) {\n  const response = await axios.get(\n    `movie/${movieID}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchBar_searchForm__V6XO6\",\"input\":\"SearchBar_input__bIy50\",\"button\":\"SearchBar_button__T7RTc\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './SearchBar.module.css';\nimport toast from 'react-hot-toast';\n\nexport function SearchBar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n      return toast.error('Please enter movie name');\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n\n  const handleChange = e => {\n    setQuery(e.currentTarget.value);\n  };\n\n  return (\n    <main>\n      <form className={s.searchForm} onSubmit={onFormSubmit}>\n        <input\n          className={s.input}\n          type=\"text\"\n          value={query}\n          onChange={handleChange}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"enter movie name\"\n        ></input>\n        <button className={s.button} type=\"submit\">\n          Search\n        </button>\n      </form>\n    </main>\n  );\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"MoviesFound_header__IptQ+\",\"list\":\"MoviesFound_list__RtHCh\",\"link\":\"MoviesFound_link__xRpDn\",\"poster\":\"MoviesFound_poster__cAdB9\",\"title\":\"MoviesFound_title__N4X+F\"};","import { Link } from 'react-router-dom';\nimport s from './MoviesFound.module.css';\nimport zeroPicture from '../../images/no-poster-big-2x.jpg';\n\nimport PropTypes from 'prop-types';\n\nexport function MoviesFound({ movies, movieName }) {\n  return (\n    <>\n      {movies.length === 0 ? (\n        <h2 className={s.header}>Sorry, no results for: {movieName}</h2>\n      ) : (\n        <>\n          <h2 className={s.header}>Search results for: {movieName}</h2>\n          <ul className={s.list}>\n            {movies.map(movie => (\n              <li key={movie.id} className={s.element}>\n                <Link to={`${movie.id}`} className={s.link}>\n                  <img\n                    className={s.poster}\n                    src={\n                      movie.poster_path\n                        ? `https://image.tmdb.org/t/p/w200/${movie.poster_path}`\n                        : `${zeroPicture}`\n                    }\n                    alt={movie.title}\n                  />\n                  <p className={s.title}>{movie.title}</p>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </>\n  );\n}\n\nMoviesFound.propTypes = {\n  movies: PropTypes.array,\n  movieName: PropTypes.string,\n};\n","import { useState, useEffect } from 'react';\nimport { SearchBar } from '../../components/SearchBar';\nimport { MoviesFound } from '../../components/MoviesFound';\nimport { fetchMoviesSearch } from 'services/moviesAPI';\n\nexport default function MoviesPage() {\n  const [movieName, setMovieName] = useState('');\n  const [movies, setMovies] = useState(null);\n\n  const handleFormSubmit = query => {\n    setMovieName(query);\n  };\n\n  useEffect(() => {\n    if (!movieName) {\n      return;\n    }\n    fetchMoviesSearch(movieName).then(setMovies);\n  }, [movieName]);\n\n  return (\n    <>\n      <SearchBar onSubmit={handleFormSubmit} />\n      {movies && <MoviesFound movies={movies} movieName={movieName} />}\n    </>\n  );\n}\n"],"names":["axios","API_KEY","fetchTrending","response","data","results","fetchMoviesSearch","searchQuery","fetchMovieDetails","movieID","fetchMovieCredits","cast","fetchMovieReviews","SearchBar","onSubmit","useState","query","setQuery","className","s","e","preventDefault","trim","toast","type","value","onChange","currentTarget","autoComplete","autoFocus","placeholder","MoviesFound","movies","movieName","length","map","movie","to","id","src","poster_path","zeroPicture","alt","title","MoviesPage","setMovieName","setMovies","useEffect","then"],"sourceRoot":""}
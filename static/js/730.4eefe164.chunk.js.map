{"version":3,"file":"static/js/730.4eefe164.chunk.js","mappings":"2TAEAA,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAGT,SAAeC,IAAtB,+B,aAAO,O,oBAAA,oGACkBF,IAAAA,IAAA,qCAAwCC,IAD1D,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAMA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAiCC,GAAjC,uFACkBP,IAAAA,IAAA,+BACGC,EADH,kBACoBM,EADpB,+CADlB,cACCJ,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAQA,SAAeG,EAAtB,kC,aAAO,O,oBAAA,WAAiCC,GAAjC,uFACkBT,IAAAA,IAAA,gBACZS,EADY,oBACOR,EADP,oBADlB,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAQA,SAAeM,EAAtB,kC,aAAO,O,oBAAA,WAAiCD,GAAjC,uFACkBT,IAAAA,IAAA,iBACXS,EADW,4BACgBR,EADhB,oBADlB,cACCE,EADD,yBAIEA,EAASC,KAAKO,MAJhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,uFACkBT,IAAAA,IAAA,gBACZS,EADY,4BACeR,EADf,oBADlB,cACCE,EADD,yBAIEA,EAASC,KAAKC,SAJhB,oE,sHCnCP,GAAgB,OAAS,6BAA6B,UAAY,gCAAgC,YAAc,kCAAkC,MAAQ,4BAA4B,UAAY,gCAAgC,SAAW,+BAA+B,OAAS,8B,mBCIxQQ,EAAe,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAE7B,OACE,8BACGA,IACC,4BACE,SAAC,KAAD,CAAMC,GAAG,IAAT,UACE,mBACEC,UAAWC,EAAAA,OACXC,KAAK,SAFP,wBAUF,iBAAKF,UAAWC,EAAAA,UAAhB,WACE,gBACEE,IACEL,EAAMM,YAAN,0CACuCN,EAAMM,aAD7C,UAEOC,GAETC,IAAKR,EAAMS,kBAEb,iBAAKP,UAAWC,EAAAA,YAAhB,WACE,gBAAID,UAAWC,EAAAA,MAAf,UACGH,EAAMS,eADT,KAC2BT,EAAMU,aAAaC,MAAM,EAAG,GADvD,QAGA,eAAGT,UAAWC,EAAAA,UAAd,yBACoC,GAArBH,EAAMY,aADrB,QAGA,eAAIV,UAAWC,EAAAA,MAAf,wBACA,cAAGD,UAAWC,EAAAA,UAAd,SAA4BH,EAAMa,YAClC,eAAIX,UAAWC,EAAAA,MAAf,sBACA,cAAGD,UAAWC,EAAAA,UAAd,SACGH,EAAMc,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,eAIlD,mBACA,iBAAKhB,UAAWC,EAAAA,cAAhB,WACE,eAAID,UAAWC,EAAAA,MAAf,+BAEA,SAAC,KAAD,CACEF,GAAG,OACHC,UAAW,qBAAGiB,SAA2BhB,EAAAA,OAAWA,EAAAA,UAFtD,mBAOA,SAAC,KAAD,CACEF,GAAG,SACHC,UAAW,qBAAGiB,SAA2BhB,EAAAA,OAAWA,EAAAA,UAFtD,qBAMA,SAAC,KAAD,aCzDG,SAASiB,IACtB,IAAQzB,GAAY0B,EAAAA,EAAAA,MAAZ1B,QACR,GAA0B2B,EAAAA,EAAAA,UAAS,MAAnC,eAAOtB,EAAP,KAAcuB,EAAd,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACR9B,EAAAA,EAAAA,IAAkBC,GAAS8B,KAAKF,KAC/B,CAAC5B,KAEG,SAACI,EAAD,CAAcC,MAAOA,M","sources":["services/moviesAPI.js","webpack://goit-react-hw-05-movies/./src/components/OneMovieCard/OneMovieCard.module.css?c13e","components/OneMovieCard/OneMovieCard.js","views/MovieDetailView/MovieDetailView.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3816eed11788ae9ab9f7c04c9c090fd5';\n\n// ----trending movies\nexport async function fetchTrending() {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\n// ---- search movies\nexport async function fetchMoviesSearch(searchQuery) {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1&language=en-US&include_adult=false`\n  );\n  return response.data.results;\n}\n\n// ---- movie's details\nexport async function fetchMovieDetails(movieID) {\n  const response = await axios.get(\n    `movie/${movieID}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\n// // ---- movie's credits\nexport async function fetchMovieCredits(movieID) {\n  const response = await axios.get(\n    `/movie/${movieID}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n}\n\n// // ---- movie's reviews\nexport async function fetchMovieReviews(movieID) {\n  const response = await axios.get(\n    `movie/${movieID}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"OneMovieCard_button__3xBd8\",\"movieCard\":\"OneMovieCard_movieCard__k6a-E\",\"description\":\"OneMovieCard_description__irAcw\",\"title\":\"OneMovieCard_title__eTT3G\",\"paragraph\":\"OneMovieCard_paragraph__VU5g6\",\"inactive\":\"OneMovieCard_inactive__1g2T1\",\"active\":\"OneMovieCard_active__QsJIc\"};","import { NavLink, Link, Outlet } from 'react-router-dom';\nimport s from './OneMovieCard.module.css';\nimport zeroPicture from '../../images/no-poster-big-2x.jpg';\nimport PropTypes from 'prop-types';\n\nexport const OneMovieCard = ({ movie }) => {\n  // let navigate = useNavigate();\n  return (\n    <>\n      {movie && (\n        <div>\n          <Link to=\"/\">\n            <button\n              className={s.button}\n              type=\"button\"\n              // onClick={() => {\n              //   navigate(-1);\n              // }}\n            >\n              Go back\n            </button>\n          </Link>\n          <div className={s.movieCard}>\n            <img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w200/${movie.poster_path}`\n                  : `${zeroPicture}`\n              }\n              alt={movie.original_title}\n            />\n            <div className={s.description}>\n              <h2 className={s.title}>\n                {movie.original_title} ({movie.release_date.slice(0, 4)})\n              </h2>\n              <p className={s.paragraph}>\n                User score: {movie.vote_average * 10}%\n              </p>\n              <h3 className={s.title}> Overview</h3>\n              <p className={s.paragraph}>{movie.overview}</p>\n              <h3 className={s.title}> Genres</h3>\n              <p className={s.paragraph}>\n                {movie.genres.map(genre => genre.name).join(', ')}\n              </p>\n            </div>\n          </div>\n          <hr />\n          <div className={s.additionalNav}>\n            <h3 className={s.title}> Additional info</h3>\n\n            <NavLink\n              to=\"cast\"\n              className={({ isActive }) => (isActive ? s.active : s.inactive)}\n            >\n              Cast\n            </NavLink>\n\n            <NavLink\n              to=\"review\"\n              className={({ isActive }) => (isActive ? s.active : s.inactive)}\n            >\n              Review\n            </NavLink>\n            <Outlet />\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nOneMovieCard.propTypes = {\n  movie: PropTypes.object,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/moviesAPI';\n\nimport { OneMovieCard } from 'components/OneMovieCard';\n\nexport default function MovieDetailsView() {\n  const { movieID } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    fetchMovieDetails(movieID).then(setMovie);\n  }, [movieID]);\n\n  return <OneMovieCard movie={movie} />;\n}\n"],"names":["axios","API_KEY","fetchTrending","response","data","results","fetchMoviesSearch","searchQuery","fetchMovieDetails","movieID","fetchMovieCredits","cast","fetchMovieReviews","OneMovieCard","movie","to","className","s","type","src","poster_path","zeroPicture","alt","original_title","release_date","slice","vote_average","overview","genres","map","genre","name","join","isActive","MovieDetailsView","useParams","useState","setMovie","useEffect","then"],"sourceRoot":""}